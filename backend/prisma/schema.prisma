generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Proof {
  id                 Int       @id @default(autoincrement())
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
  
  // Informações básicas da prova
  titulo             String
  banca              String
  data               DateTime
  totalQuestoes      Int   
  tipoPontuacao      String?   
  aproveitamento     Float?   
  inscritos          Int? 

  // Gabaritos e respostas
  gabaritoPreliminar String?
  gabaritoDefinitivo String?
  userAnswers        String?
  simulacaoAnuladas  String?
  
  // Tipo e configurações
  type               String    @default("CONCURSO")
  
  // Campos de simulação de ranking
  simulacaoMedia     Float?
  simulacaoDesvioPadrao Float?
  simulacaoNotaDeCorte Float?

  // Informações do concurso
  orgao              String?   
  cargo              String?   
  notaDiscursiva     Float?    
  
  // Resultados estruturados
  resultadoObjetiva  Json?     // Status: CLASSIFICADO, ELIMINADO, etc.
  resultadoDiscursiva Json?    // Detalhes da prova discursiva
  resultadoFinal     Json?     // Resultado final consolidado

  // NOVOS CAMPOS - Configurações Avançadas de Banca
  regraAnulacao      String?   @default("PADRAO")  // PADRAO, CESPE_INTEGRAL, CESPE_MEIO, CESPE_CALCULADO
  valorAnulacao      Float?    @default(1.0)       // Valor que uma anulada adiciona (1.0, 0.5, etc.)
  formulaAnulacao    String?                       // Fórmula customizada para cálculo complexo
  
  // Configurações de Nota de Corte
  tipoNotaCorte      String?   @default("DECIMAL")  // DECIMAL, INTEIRO
  precisaoDecimal    Int?      @default(1)          // Casas decimais (0=inteiro, 1=uma casa, etc.)

  // Relacionamentos
  results   Result[]
  subjects  Subject[]
}

model Subject {
  id              Int    @id @default(autoincrement())
  nome            String
  questoes        Int
  questaoInicio   Int    // Questão inicial da matéria
  questaoFim      Int    // Questão final da matéria

  proof   Proof @relation(fields: [proofId], references: [id], onDelete: Cascade)
  proofId Int
}

model Result {
  id          Int    @id @default(autoincrement())
  disciplina  String
  acertos     Int
  erros       Int
  brancos     Int
  anuladas    Int

  proof     Proof @relation(fields: [proofId], references: [id], onDelete: Cascade)
  proofId   Int
}